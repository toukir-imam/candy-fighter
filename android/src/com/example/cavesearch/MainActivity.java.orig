package com.example.cavesearch;


import java.util.LinkedList;
import java.util.List;

import com.example.cavesearch.CommChord.Status;
import com.samsung.chord.*;

import javax.microedition.khronos.opengles.GL10;

import org.anddev.andengine.engine.Engine;
import org.anddev.andengine.engine.camera.Camera;
import org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl;
import org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl;
import org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl.IAnalogOnScreenControlListener;
import org.anddev.andengine.engine.handler.IUpdateHandler;
import org.anddev.andengine.engine.handler.physics.PhysicsHandler;
import org.anddev.andengine.engine.options.EngineOptions;
import org.anddev.andengine.engine.options.EngineOptions.ScreenOrientation;
import org.anddev.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy;
import org.anddev.andengine.entity.modifier.ScaleModifier;
import org.anddev.andengine.entity.modifier.SequenceEntityModifier;
import org.anddev.andengine.entity.scene.Scene;
import org.anddev.andengine.entity.scene.Scene.IOnSceneTouchListener;
import org.anddev.andengine.entity.scene.background.ColorBackground;
import org.anddev.andengine.entity.sprite.Sprite;
import org.anddev.andengine.entity.text.ChangeableText;
import org.anddev.andengine.entity.util.FPSLogger;
import org.anddev.andengine.extension.input.touch.controller.MultiTouch;
import org.anddev.andengine.extension.input.touch.controller.MultiTouchController;
import org.anddev.andengine.extension.input.touch.exception.MultiTouchException;
import org.anddev.andengine.input.touch.TouchEvent;
import org.anddev.andengine.opengl.font.Font;
import org.anddev.andengine.opengl.texture.Texture;
import org.anddev.andengine.opengl.texture.TextureOptions;
import org.anddev.andengine.opengl.texture.region.TextureRegion;
import org.anddev.andengine.opengl.texture.region.TextureRegionFactory;
import org.anddev.andengine.ui.activity.BaseGameActivity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.Typeface;
import android.provider.Settings;

import android.util.Log;



public class MainActivity extends BaseGameActivity  {
	
	public static final int CAMERA_WIDTH = 880;
	public static final int CAMERA_HEIGHT = 495;
	
	public Camera mCamera;
	SceneManager sm;
	@Override
	public Engine onLoadEngine() {
		this.mCamera = new Camera(0, 0, CAMERA_WIDTH, CAMERA_HEIGHT);
		final Engine engine =new Engine(new EngineOptions(true, ScreenOrientation.LANDSCAPE, new RatioResolutionPolicy(CAMERA_WIDTH, CAMERA_HEIGHT), this.mCamera).setNeedsMusic(true));
		if(MultiTouch.isSupported(this)){
			try{
				engine.setTouchController(new MultiTouchController());
			}catch(final MultiTouchException e){
				Log.d("miku","Multitouch exception raised");
			}
		}
		return engine; 
	}

	@Override
	public void onLoadResources() {
		
		// load the chord
		//startActivity(new Intent(Settings.ACTION_WIFI_SETTINGS));
		//mChord = new CommChord();
		//mChord.ChordInitiate(this);
		SceneManager.init(this);
		
		sm = SceneManager.getManager();
		sm.loadResultScene();
		sm.loadGameSceneResource();
		sm.loadFlashScene();
		sm.loadFailScene();
		CommChord.getInstance().status=CommChord.Status.network_disconnected;
		//Log.d("miku","on resource load completed");
		
	}

	@Override
	public Scene onLoadScene() {
		
		//sm.createGameScene();
		//return sm.getGameScene();
		//SceneManager.getManager().curScene=SceneManager.SceneNames.home;
		//CommChord.getInstance().stopChord();
		return sm.getFlashScene();
	}


	@Override
	public void onLoadComplete() {

	}

	@Override
	public void onStop(){
		super.onStop();
		Log.d("miku","onStop");
		if(this.isFinishing()){
			Log.d("miku","finishing");
			if(CommChord.getInstance()!=null){
				//Log.d("miku","kk");
				//CommChord.getInstance().sendDisconnectRequest();
				//Log.d("miku","ss");
				CommChord.getInstance().stopChord();
				//Log.d("miku","ww");
			}
		}		
	}
	@Override
	public void onBackPressed()
	{
		Log.d("miku","back is pressed"+SceneManager.getManager().curScene.toString());
		
		if(CommChord.getInstance().status==CommChord.Status.opponent_connected){
			CommChord.getInstance().status=CommChord.Status.network_connected;
			CommChord.getInstance().sendDisconnectRequest();
		}
		if(SceneManager.getManager().curScene==SceneManager.SceneNames.game ){
			Log.d("miku","ll");
			SceneManager.getManager().getGameSceneObj().finish();
			SceneManager.getManager().setFailScene("You Disconnected");
			CommChord.getInstance().sendDisconnectRequest();
		}
		else if(SceneManager.getManager().curScene==SceneManager.SceneNames.home ){
			//super.onBackPressed();
			finish();
		}
		else if(SceneManager.getManager().curScene==SceneManager.SceneNames.select_opponent){
			SceneManager.getManager().setHomeScene();
			//super.onBackPressed();
		}
		else if(SceneManager.getManager().curScene==SceneManager.SceneNames.request_sent){
			SceneManager.getManager().setHomeScene();
			SceneManager.dissmissWaiting();
			CommChord.getInstance().sendConfirm(CommChord.getInstance().opponentId, false);
			//super.onBackPressed();
		}
		else if(SceneManager.getManager().curScene==SceneManager.SceneNames.fail){
		
			SceneManager.getManager().setHomeScene();
		}	
	    
	}
}
